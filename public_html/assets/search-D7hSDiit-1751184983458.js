import{v as e}from"./index-Cgl-CluD-1751184983458.js";import{generateEmbedding as t}from"./openai-GqANyYiK-1751184983458.js";async function semanticSearch(r){const{query:a,userId:c,similarityThreshold:o=.7,maxResults:s=10,documentIds:n}=r;try{const{embedding:r}=await t(a),{data:i,error:d}=await e.rpc("search_similar_chunks",{query_embedding:r,similarity_threshold:o,match_count:s,user_filter:c||null});if(d)throw console.error("Semantic search error:",d),new Error("Failed to perform semantic search");let u=i||[];n&&n.length>0&&(u=u.filter(e=>n.includes(e.document_id)));return await Promise.all(u.map(async t=>{const{data:r}=await e.from("uploaded_documents").select("*").eq("id",t.document_id).single();return{id:t.id,document_id:t.document_id,chunk_text:t.chunk_text,similarity:t.similarity,document:r||void 0}}))}catch(i){throw console.error("Semantic search failed:",i),i}}async function textSearch(t){const{query:r,userId:a,documentType:c,dateRange:o}=t;try{let t=e.from("uploaded_documents").select("*").eq("user_id",a).textSearch("ocr_text",r,{type:"websearch",config:"english"});c&&(t=t.eq("document_type",c)),o&&(t=t.gte("created_at",o.start.toISOString()).lte("created_at",o.end.toISOString())),t=t.order("created_at",{ascending:!1});const{data:s,error:n}=await t;if(n)throw console.error("Text search error:",n),new Error("Failed to perform text search");return s||[]}catch(s){throw console.error("Text search failed:",s),s}}async function combinedSearch(e,t,r={}){const{semanticWeight:a=.7,textWeight:c=.3,maxResults:o=20,documentType:s,dateRange:n}=r;try{const[r,c]=await Promise.all([semanticSearch({query:e,userId:t,maxResults:Math.ceil(o*a)}),textSearch({query:e,userId:t,documentType:s,dateRange:n})]),i=new Set,d=[];return r.forEach(e=>{e.document&&!i.has(e.document.id)&&(i.add(e.document.id),d.push(e.document))}),c.forEach(e=>{i.has(e.id)||(i.add(e.id),d.push(e))}),{semanticResults:r,textResults:d.slice(0,o),totalResults:d.length}}catch(i){throw console.error("Combined search failed:",i),i}}export{combinedSearch as c,semanticSearch as s,textSearch as t};
