import{x as e,v as t}from"./index-B-x91b---1751155484253.js";async function semanticSearch(r){const{query:a,userId:c,similarityThreshold:s=.7,maxResults:o=10,documentIds:n}=r;try{const{embedding:r}=await e(a),{data:i,error:d}=await t.rpc("search_similar_chunks",{query_embedding:r,similarity_threshold:s,match_count:o,user_filter:c||null});if(d)throw console.error("Semantic search error:",d),new Error("Failed to perform semantic search");let u=i||[];n&&n.length>0&&(u=u.filter(e=>n.includes(e.document_id)));return await Promise.all(u.map(async e=>{const{data:r}=await t.from("uploaded_documents").select("*").eq("id",e.document_id).single();return{id:e.id,document_id:e.document_id,chunk_text:e.chunk_text,similarity:e.similarity,document:r||void 0}}))}catch(i){throw console.error("Semantic search failed:",i),i}}async function textSearch(e){const{query:r,userId:a,documentType:c,dateRange:s}=e;try{let e=t.from("uploaded_documents").select("*").eq("user_id",a).textSearch("ocr_text",r,{type:"websearch",config:"english"});c&&(e=e.eq("document_type",c)),s&&(e=e.gte("created_at",s.start.toISOString()).lte("created_at",s.end.toISOString())),e=e.order("created_at",{ascending:!1});const{data:o,error:n}=await e;if(n)throw console.error("Text search error:",n),new Error("Failed to perform text search");return o||[]}catch(o){throw console.error("Text search failed:",o),o}}async function combinedSearch(e,t,r={}){const{semanticWeight:a=.7,textWeight:c=.3,maxResults:s=20,documentType:o,dateRange:n}=r;try{const[r,c]=await Promise.all([semanticSearch({query:e,userId:t,maxResults:Math.ceil(s*a)}),textSearch({query:e,userId:t,documentType:o,dateRange:n})]),i=new Set,d=[];return r.forEach(e=>{e.document&&!i.has(e.document.id)&&(i.add(e.document.id),d.push(e.document))}),c.forEach(e=>{i.has(e.id)||(i.add(e.id),d.push(e))}),{semanticResults:r,textResults:d.slice(0,s),totalResults:d.length}}catch(i){throw console.error("Combined search failed:",i),i}}export{combinedSearch as c,semanticSearch as s,textSearch as t};
